class Solution {
public:
    int  dpp(vector<int>&arr,int  i ,int  n,vector<int>&dp )
    {
        if(i==n-1)
        {
           return 1;
        }
        if(i== n )
        {
            return 0;
        }
        if(dp[i]!=-1)
        {
            return dp[i];
        }
        for(int j=1 ; j<=arr[i] ; j++)
        {
            if(i+j<n && dpp(arr,i+j , n,dp)){
                return dp[i]=1;
           
            }
        }
        return dp[i]=0;
    }
    bool canJump(vector<int>& nums) {
               vector<int>dp(nums.size()+1 , -1);
               return dpp(nums,0 , nums.size() ,dp);
                     
    }
};
