class Solution {
public:
    int trap(vector<int>& height) {
    int n = height.size();
    vector<int>maxLeft(n);
    vector<int>maxRight(n);
    maxLeft[0]=height[0];
    long long res= 0 ;
    for(int i =1; i< n; i++ )
    {
       maxLeft[i]= max(maxLeft[i-1] , height[i]);
    }
    maxRight[n-1]=height[n-1];
    for(int i = n-2; i >=0 ; i--)
    {
        maxRight[i]=max(maxRight [i + 1] , height[i]);
    }
    for(int i =1 ;i < n-1; i++)
    {
          if(height[i] < maxLeft[i-1] && height[i] < maxRight[i+1]) 
          {
            res+=min(maxLeft[i-1] , maxRight[i+1] ) -height[i];
          }
    }
    return res;
        
    }
};
