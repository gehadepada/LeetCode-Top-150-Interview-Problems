class Solution {
public:
    int candy(vector<int>& ratings) {
        int n = ratings.size();
        int res = 0;
        vector<int> v(n, 1);
        if (n == 2) {
            if (ratings[0] > ratings[1]) {
                v[0]++;
            }
            else if(ratings[1]>ratings[0])
            {
                v[1]=v[0]+1;
            }

        } else {
            if (n >= 3) {
                if (ratings[0] > ratings[1]) {
                    v[0]++;
                }
                if(ratings[n-1] > ratings[n-2])
                {
                    v[n-1]++;
                }
            }
        }
        for (int i = 1; i < n - 1; i++) {
            if (ratings[i] > ratings[i - 1] && (ratings[i] > ratings[i + 1])) {
                v[i]=max(v[i-1] ,v[i+1])+1;
            }
            else if(ratings[i] > ratings[i - 1])
            {
                v[i]=v[i-1]+1;
            }
            else if(ratings[i] >ratings[i+1] )
            {
                v[i]=v[i+1]+1;
            }
        }
         for (int i = n-2; i >=1; i--) {
            if (ratings[i] > ratings[i - 1] && (ratings[i] > ratings[i + 1])) {
                v[i]=max(v[i-1] ,v[i+1])+1;
            }
            else if(ratings[i] > ratings[i - 1])
            {
                v[i]=v[i-1]+1;
            }
            else if(ratings[i] >ratings[i+1] )
            {
                v[i]=v[i+1]+1;
            }
        }
         if (n == 2) {
            if (ratings[0] > ratings[1]) {
                v[0]=v[1]+1;
            }

        } else {
            if (n >= 3) {
                if (ratings[0] > ratings[1]) {
                    v[0]=v[1]+1;
                }
                if(ratings[n-1] > ratings[n-2])
                {
                    v[n-1]=v[n-2]+1;
                }
            }
        }
        for(auto x: v)
        {
            cout<<x<<endl;
            res+=x;
        }
        return res;
    }
};
