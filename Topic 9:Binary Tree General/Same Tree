/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void preorder(TreeNode*root ,vector<int>&res)
   {
    if(root == nullptr)
    {
        res.push_back(-1e5);
        return;
    }
    res.push_back(root->val);
    preorder(root->left,res);
    preorder(root->right ,res);

   }
    bool isSameTree(TreeNode* p, TreeNode* q) {
        vector<int>resP;preorder(p,resP);
        vector<int>resQ;preorder(q,resQ);
        for(auto x : resP)
        {
            cout<<x<<" ";
        }
        cout<<endl;
        for(auto x : resQ)
        {
            cout<<x<<" ";
        }
        cout<<endl;
        return resP==resQ;


        
    }
};
