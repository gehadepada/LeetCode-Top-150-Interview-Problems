/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    void order(TreeNode* root, vector<int>& res) {
        if (root == nullptr) {
            res.push_back(-1e5);
            return;
        }
        res.push_back(root->val);
        order(root->left, res);
        order(root->right, res);
    }
     void reverseOrder(TreeNode* root, vector<int>& res) {
        if (root == nullptr) {
            res.push_back(-1e5);
            return;
        }
        res.push_back(root->val);
        swap(root->left , root->right);
        reverseOrder(root->left, res);
        reverseOrder(root->right, res);
    }
    bool isSymmetric(TreeNode* root) {
        vector<int>res,res2;
        order(root->left , res);
        reverseOrder(root->right , res2);
        return res == res2;
    }

};
